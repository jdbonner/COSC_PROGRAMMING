///////////////////////////////////////////////////Day 1//////////////////////////////////////////////

Python - intro


vim $HOME/.vimrc  # Enables Color Coding for Code
syntatx enable  # Sets starting tabs to 4 spaces
set tabstop=4  # 
set shiftwidth=4
set expandtab
set number
filetype indent on
set autoindent

nano $HOME/.nanorc
set tabsize 4
set tabstospaces
set linenumbers




data types
strings
floats
bools

test the type with type() function
typecasting

variable declaration
variable = datatype

//////////////////////////////////////////////End of day 1//////////////////////////////////////////////////
//////////////////////////////////////////////day 2///////////////////////////////////////////////////

bool typecasting examples
bool('0') = true
bool(1) = true
bool() = 


split and join
word = ''
type(word)
output:class 'str'

lists and tuples

#elements are stored inside
tuple() #are immutable uses () to display
list() #are mutable uses [] to display

using join
variable = ''.join(variable)
#use del to remove letters
del variable[-2] #deletes element of the list

using split
variable.split(':') #selector can be whatever is in the string as long as proper datatype. by default it splits by spaces.

.format
#example
'{}'.format(variable[0])
print('{} will bear the ring'.format(variable[0]))
#escape characters is backslash /
#example2
'{} and {} beared the ring'.format(fellowship[0], fellowship[1])
'{element0} and {element1} beared the ring'.format(variablelist[

.append
#example
variable.append(value) #use to append to a list.

'''#multi line comment
'''
/////////////////////////////EXERCISE 1////////////////////////////
#using split and join
'''
#Activity - Split an email address

email = 'name@domain.com'      #value to split
['name', 'domain', 'com']      #example of how output should appear

email1 = email.split('@')      #splitting the string value by the @ symbol.
email2 = '.'.join(email1)      #rejoining the string value with a . symbol in order to complete the split with the .com
email3 = email2.split('.')     #splits by the . in the string forming 3 seperated values in the desired output format
print(email1)                  #prints the first split which is for testing purposes
print(email2)                 #prints the value of joinging the list back together for testing
print(email3)                 #prints the completed splitting of the code for display purposes
'''
#using format
'''
email = 'name@domain.com'
print(email.split('@'))
print('[{}],'.format(email.split('@')[0]))
'''
#using append
'''
blank = []                  #declares a variable named blank 
email = 'name@domain.com'
email2 = email.split('@')
email3 = email.split('.')

print(email2[1].split('.'))
print(email2)
blank.append(email2[0])
blank.append(email2[1].split('.')[0])
blank.append(email2[1].split('.')[1])
print(blank)
'''
//////////////////////////////END///////////////////////////////////

Flow control
#use \n to escape and make a new line
input()
#default value is a string. declaire a different data type if you want it to be an int or float.

if <condition>:
  <indented code block>
elif <condition>:
  <indented code block>
elif <condition>:
  <indented code block>
else:
  <indented code block>

#example
num = int(input('Type a number:\n'))
if num ==7:
  print('This is True')
elif num < 7:
  print('num ' + str(num) + ' is < 7'
elif num > 7 and num < 20:
  print(str(num) + ' is between 7 and 20')
else:
  print('This is else')

/////////////////////////////////////////EXERCISE 2///////////////////////////////////////
FizzBuzz is an interview question that is said to filter out 99.5% of programming job candidates.
Modify deliverable.py so that it takes a number from the user and prints it (the number) if it isnâ€™t divisible by 3 or 5. 
For multiples of 3 print 'fizz' instead. For multiples of 5 print 'buzz' instead.
For multiples of 3 and 5 print 'fizzbuzz'.


#solution 1
'''
#!/usr/bin/env python3

num = int(input('Please input a number: '))    #declaired the variable and takes the input from the user while only allowing integers
if num % 3 == 0 and num % 5 == 0:              #first part of the if statement checking for both conditions to be divisible
  print('fizzbuzz')                            #prints fizzbuzz
elif num % 3 == 0:                             #elif checking if divisible by 3
  print('fizz')                                #prints fizz
elif num % 5 == 0:                             #elif checking if divisible by 5
  print('buzz')                                #prints buzz
else:                                          #else to catch non divisible.
    print(num)                                 #prints the number that was input
'''






//////////////////////////////////////END of exercise 2////////////////////////////////////




////////////////////////////////////////END of day 2////////////////////////////////////////////////////






